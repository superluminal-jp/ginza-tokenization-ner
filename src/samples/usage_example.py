"""Example usage of the json_ginza_processor package.

Run with: python src/samples/usage_example.py
"""

from __future__ import annotations

import json
import logging
import sys
from typing import Any, Dict


def build_example_payload() -> Dict[str, Any]:
    """Build a minimal example payload to process.

    Returns
    -------
    Dict[str, Any]
        A payload following the documented input schema.
    """

    #     return {
    #         "texts": [
    #             """（１）我が国の強み
    # ① デジタルインフラの 整備
    # 我が国においては、高度情報通信ネットワーク社会形成基本法1（IT基本法）の制定以降、 社会全体
    # のデジタル化に必要不可欠なデジタルインフラである インター ネット等のネットワーク環境の整備は
    # 相当程度進展して おり、2023年３月現在で 光ファイバ整備率（世帯カバー率）は 99.8％2、2024年３
    # 月現在で５Gの人口カバー率は 98.1％3となっている。

    # ② アナログ規制の見直し
    # デジタル技術の実装を阻み、社会のデジタル化の阻害要因となっているアナログ規制 について 、目
    # 視規制、定期検査・点検規制等の代表的な７類型の規制及び FD等記録媒体規制に関する法令等約１万
    # 条項を見直し、見直しが必要とされた 8,162件について約 98％（8,162件のうち 7,983件、2025年５
    # 月末時点）の見直しが完了 している。

    # ③ 信頼性のある自由なデータ流通（ DFFT）の推進
    # 信頼性のある情報の自由かつ安全な流通の確保を図るため、 「信頼性のある自由なデータ流通（ Data
    # Free Flow with Trust ：DFFT）」の概念を提唱し、 OECDの下で設立した IAP4等の国際枠組みを通じて 、
    # データの越境移転時に直面する課題 の解決につながるプロジェクトを実施する など、データの越境移
    # 転に関する国際的なガバナンスの確立 を主導している。
    # """,
    #             """
    # （２）利用者視点の取組
    # ① マイナンバーカードの普及 ・利活用 とマイナポータルの利便性向上
    # デジタル社会の基盤であるマイナンバーカードは、 2025年３月末時点で国民の 約78.3％が保有して
    # おり、確定申告・パスポート・引越し・子育て等のオンライン申請、健康保険証・運転免許証・図書館
    # カード等としての利用、民間事業者のサービス申込等での利用など、官民問わず様々なシーンでの利
    # 活用が進んでいる。また、 子育てや介護 等の行政手続の検索、オンラインでの申請 や税・薬剤 ・医療費
    # など自身の情報の確認等 ができる個人向け行政 サービス のオンライン窓口であるマイナポータル は、
    # 2025年３月末時点で約 7,800万人の方に利用登録されており、利用者から寄せられた意見を基に 、よ
    # り利便性の高いサービスを提供できるよう機能拡大や継続的な改善に取り組んでいる 。

    # ② 事業者向け行政サービスの利用者体験向上に向けた環境整備
    # 事業者向け の行政サービスについて は、事業者が 行政手続を行う際に手続情報の取得や申請準備を
    # 円滑に行えるよう支援する ポータルサイトの整備を進めている。また 、認証機能である GビズIDにつ
    # いては、2025年３月末時点で 約125万者が利用している。

    # ③ 準公共分野におけるデジタル化の推進
    # 準公共分野5については、 生活に密接に関連しているため国民から期待が高く、国と民間が協働して
    # 支えている もののうち、 国による関与が大きく他の民間分野への波及効果が大きいものとして、 「健康 ・
    # 医療・介護」 、 「教育」 、 「防災」 、 「こども」 、 「モビリティ」 等の８分野を指定 し、取組を進めてき てい
    # る。
    # たとえば、防災分野においては、 「防災デジタルプラットフォーム 」を構築し、 災害対応各機関が迅
    # 速に災害情報を集約、共有する ことができる環境を整備 することと している。また 、こども分野にお
    # いては、就労証明書 の様式の標準化を進 めるとともに 、保活ワンストップサービスの実現に向けて、
    # 保護者・施設・ 地方公共団体 等の間でいわゆる「 保活」に関する情報を受け渡しするための連携基盤
    # の整備が進められ ている。このように、 準公共分野におけるデジタル化も進みつつある。
    # """,
    #             """（３）中長期的な政府機能の強化
    # ① 地方公共団体情報システムの統一・標準化
    # 急速に人口減少社会に突入する中、各地方公共団体が個別に情報システムを維持管理し、セキュリ
    # ティを確保することは人材面・財政面からの限界があるため、住民サービスの向上や行政の効率化、
    # 持続可能な行政サービスの確保を目指し、基幹 20業務の標準化に取り組んでいる。具体的には、 2025
    # 年度までの標準準拠システムへの移行を原則とし、標準仕様の作成を行うとともに、地方公共団体の
    # 取組状況の丁寧な把握や円滑な移行に向けた環境整備に努めている。
    # 標準化の対象となる全 34,592システムのうち、 2025年１月末時点で、 2,989システム（ 8.6％）が
    # 特定移行支援システム6に該当する見込みであり、特定移行支援システムを有する団体数は 1,788団体
    # のうち554団体（31.0％）であるが、こうしたシステムについても移行期限後、概ね５年以内にでき
    # るよう積極的に支援することとしている。

    # ② 国・地方 公共団体等の情報システム のガバメントクラウドへの移行
    # 利便性の高いサービスをスピーディに提供、改善するため、国や地方公共団体、準公共分野等で共
    # 通のクラウドサービス利用環境を整え てきており、 対象のクラウドサービスを選定し、 2021年度から
    # 自治体システム利用検証等でガバメントクラウドの利用を順次開始 した。特に、 国においては、 まず、
    # 原則として、政府情報システムは、クラウドに最適化されたシステムをガバメントクラウド上に構築
    # し、クラウドサービス事業者が提供するサービスを活用して効率的に運用することとしている。

    # ③ガバメントソリューションサービス（ GSS）への移行
    # 最新技術を採用しつつ、各府省庁のネットワーク環境の統合を順次進めることにより、政府共通の
    # 標準的な業務実施環境（業務用 PCやネットワーク環境）である GSSを導入し、行政機関における生産
    # 性とセキュリティの最適化を図っている。
    # 2021年度（令和３年度） のデジタル庁での利用を皮切りに 、順次国の行政機関での利用 を拡大して
    # きた。2025年２月時点で、 GSSの導入府省庁 は13機関（GSS接続ユーザー数は 4.2万人）と、2024年
    # ２月時点（10機関）と比べて 30％増加している。
    # コロナ禍を経験し世界に伍していく ためには、今こそ成長の源泉としてデジタル化を進めるしかない
    # という認識の下、デジタル庁は設置され た。これまでの デジタル・ガバメント（ 行政のデジタル化） の取
    # 組が成果を上げるため には、一層の粘り強い コミットメントが 必要であ り、さらに、手続のコネクテッ
    # ド・ワンストップ7やプッシュ型支援といった国民一人ひとりに最適なサービスの提供、産業界の情報シ
    # ステムのモダン化8やデータ利活用を通じた経済成長の実現に向けては制度面・技術面で取り組むべき課
    # 題が山積している。
    # また、政府・デジタル庁が担うべき任務や期待される役割 としては、 「行政のデジタル化・デジタルト
    # ランスフォーメーション（ DX） 」だけでなく「社会全体のデジタル化・デジタルトランスフォーメーショ
    # ン（DX） 」 、それが原点であり、その目的のために施策を遂行しなければならない。
    # """,
    #         ]
    #     }

    return {
        "texts": [
            """# https://www.meti.go.jp/policy/mono_info_service/geniac/geniac_magazine/resultsreport_2.html
社会実装が続々登場！ GENIAC第2期採択事業者成果報告会を開催しました！
2025年6月9日（月）、東京・九段会館において、第2期GENIACで生成AI基盤モデル開発の支援事業に採択された19の事業者による、成果報告会が開催されました。第１部では、採択事業者による開発およびビジネスの進捗や成果、計算資源の提供側であるハイパースケーラーなどが総括コメントを発表。第2部では高度なモデルや社会実装などを評価する表彰式が催されました。イベント当日の模様をご紹介します。
【第1部】第2期GENIAC採択事業者による成果報告とハイパースケーラーによる総括講演
はじめに、経済産業省 商務情報政策局 情報処理基盤産業室 室長 渡辺 琢也が、GENIAC第2期の半年間の取り組みを振り返り、今後の展望などを話しました。

次に、今回の19社が達成した成果について発表しました。
株式会社ABEJA
株式会社AIdeaLab
AiHUB株式会社
AI inside株式会社
株式会社EQUES
株式会社Kotoba Technologies Japan
NABLAS株式会社
株式会社Preferred Elements/株式会社Preferred Networks
SyntheticGestalt株式会社
Turing株式会社
ウーブン・バイ・トヨタ株式会社
国立研究開発法人海洋研究開発機構
カラクリ株式会社
ストックマーク株式会社
株式会社データグリッド
株式会社ヒューマノーム研究所
フューチャー株式会社
株式会社リコー
株式会社ユビタス/株式会社Deepreneur
ハイパースケーラーによる第２サイクルの総括と期待の声
採択事業者のプレゼンテーションの後、計算資源を提供したハイパースケーラー、関係者による総括コメントが寄せられました。

アマゾンウェブサービスジャパン合同会社 常務執行役員 サービス&テクノロジー統括本部 統括本部長 安田 俊彦氏
""",
        ]
    }

    # # read "output.md"
    # with open("src/samples/output.md", "r", encoding="utf-8") as f:
    #     text = f.read()
    # return {"texts": [{"id": "utt-1", "text": text}]}


def main() -> None:
    """Run the example using the public API functions."""

    # Make package importable when running from project root
    sys.path.append("src")

    from json_ginza_processor import (  # pylint: disable=C0415
        process_payload_to_dict,
        process_payload_to_json,
        export_reports_from_payload,
    )

    logging.basicConfig(level=logging.INFO, format="%(levelname)s %(message)s")
    logger = logging.getLogger("usage_example")

    payload = build_example_payload()
    logger.info("processing payload with %d texts", len(payload.get("texts", [])))

    result_dict = process_payload_to_dict(payload)
    first_input = result_dict["inputs"][0]
    first_sentence = first_input["sentences"][0]
    logger.info(
        "first token: %s",
        json.dumps(first_sentence["tokens"][0], ensure_ascii=False),
    )
    logger.info(
        "top terms: %s",
        json.dumps(first_input["term_stats"]["terms"][:3], ensure_ascii=False),
    )

    result_json = process_payload_to_json(payload)
    logger.info("json output preview: %s", result_json[:200].replace("\n", " ") + " …")

    # Save the result to a file
    with open("result.json", "w", encoding="utf-8") as f:
        f.write(result_json)

    # Export CSV reports
    report_paths = export_reports_from_payload(payload, output_dir="reports")
    logger.info("CSV reports written: %s", report_paths)


if __name__ == "__main__":
    main()
